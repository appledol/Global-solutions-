/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-arrow-right {
  background-image: url(sprite.png);
  background-position: 0px 0px;
  width: 52px;
  height: 29px;
}
.icon-arrow {
  background-image: url(sprite.png);
  background-position: 0px -29px;
  width: 18px;
  height: 81px;
}
.icon-black-arrow {
  background-image: url(sprite.png);
  background-position: -52px -25px;
  width: 11px;
  height: 34px;
}
.icon-face {
  background-image: url(sprite.png);
  background-position: -18px -29px;
  width: 27px;
  height: 25px;
}
.icon-insta {
  background-image: url(sprite.png);
  background-position: -18px -54px;
  width: 27px;
  height: 25px;
}
.icon-loc {
  background-image: url(sprite.png);
  background-position: -63px -25px;
  width: 13px;
  height: 19px;
}
.icon-mail {
  background-image: url(sprite.png);
  background-position: -52px -75px;
  width: 16px;
  height: 12px;
}
.icon-odno {
  background-image: url(sprite.png);
  background-position: -52px 0px;
  width: 26px;
  height: 25px;
}
.icon-tel {
  background-image: url(sprite.png);
  background-position: -52px -59px;
  width: 16px;
  height: 16px;
}
.icon-vk {
  background-image: url(sprite.png);
  background-position: -18px -79px;
  width: 27px;
  height: 25px;
}
